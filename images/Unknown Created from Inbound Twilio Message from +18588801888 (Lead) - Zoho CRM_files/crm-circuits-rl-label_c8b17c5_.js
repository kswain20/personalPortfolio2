Lyte.Component.register("crm-circuits-rl-label",{_template:'<template tag-name="crm-circuits-rl-label"> <lyte-event-listener event-name="cirRlLabel_refreshIcon" on-fire="{{action(\'reloadIconStatus\')}}"> <lyte-event-listener event-name="cirRlLabel_reloadCircuits" on-fire="{{action(\'reloadCircuitRL\')}}"> <lyte-event-listener event-name="cirRlLabel_setRlCount" on-fire="{{action(\'setRlCount\')}}"> <table cellspacing="0" cellpadding="0" class="relCenterBg w100per"> <tbody> <tr class="h25"> <td> <div class="rl_Header"> <span name="circuitspersonality_{{related_list_id}}" id="circuitspersonality_{{related_list_id}}" class="relListHead">{{display_label}}</span> <template is="if" value="{{expHandlers(type,\'!=\',&quot;CANVAS&quot;)}}"><template case="true"> <div class="dIB pL10"> <div class="{{if(refreshStatus,\' tb_small_loader vmiddle ref_loading\',\' tb_small_loader vmiddle ref_complete\')}}" id="circuitsRLRef" data-zcqa="cirRLLabel_refreshRL" onclick="{{action(\'reloadCircuitRL\')}}"> <span class="ld_init circuits_reload_icon cir_hideArrowTable"></span> <span class="ld_process"></span> </div> </div> </template></template> <template is="if" value="{{expHandlers(type,\'==\',&quot;CANVAS&quot;)}}"><template case="true"> <template is="if" value="{{expHandlers(rlCount,\'!==\',&quot;0&quot;)}}"><template case="true"> <span class="circuitExecCount" data-zcqa="cirRLLabel_Count">{{rlCount}}</span> </template></template> <div class="dIB pL10"> <div class="{{if(refreshStatus,\' tb_small_loader vmiddle ref_loading\',\' tb_small_loader vmiddle ref_complete\')}}" id="circuitsRLRef" data-zcqa="cirRLLabel_refreshRL" onclick="{{action(\'reloadCircuitRL\')}}"> <span class="ld_init cir_hideArrowTable circuits_reload_icon"></span> <span class="ld_process"></span> </div> </div> </template></template> </div> </td> </tr> </tbody> </table> </lyte-event-listener></lyte-event-listener></lyte-event-listener></template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"attr",position:[1,1,1]},{type:"attr",position:[1,1,1,1,1,1,1,1,1]},{type:"text",position:[1,1,1,1,1,1,1,1,1,0]},{type:"attr",position:[1,1,1,1,1,1,1,1,3]},{type:"if",position:[1,1,1,1,1,1,1,1,3],cases:{true:{dynamicNodes:[{type:"attr",position:[1,1]}]}},default:{}},{type:"attr",position:[1,1,1,1,1,1,1,1,5]},{type:"if",position:[1,1,1,1,1,1,1,1,5],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"text",position:[1,0]}]}},default:{}},{type:"attr",position:[3,1]}]}},default:{}},{type:"componentDynamic",position:[1,1,1]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]}],_observedAttributes:["module","entity_id","related_list_id","rlCount","refreshStatus","type"],init:function(){Lyte.injectResources([networkUtils.returnDependencyFiles([networkUtils.getI18nJSUrl("circuits")],crmConstants.jsStaticPath)],void 0,void 0)},data:function(){return{module:Lyte.attr("string"),entity_id:Lyte.attr("string"),related_list_id:Lyte.attr("string"),rlCount:Lyte.attr("string",{default:"0"}),refreshStatus:Lyte.attr("boolean",{default:!1}),type:Lyte.attr("string")}},actions:{reloadCircuitRL:function(){this.getData("refreshStatus")||(Lyte.triggerEvent("cirRlLabel_refreshIcon",{refreshStatus:!0}),Lyte.triggerEvent("cirRLBody_reloadRLOperations"),Lyte.triggerEvent("cirRLBody_reloadData"))},reloadIconStatus:function(t){this.setData("refreshStatus",t.refreshStatus)},setRlCount:function(t){this.setData("rlCount",t.count)}},methods:{}},{mixins:["crm-circuits-mixin"]});
