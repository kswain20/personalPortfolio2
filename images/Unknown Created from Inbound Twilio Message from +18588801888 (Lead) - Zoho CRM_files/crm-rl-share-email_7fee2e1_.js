Lyte.Component.register("crm-rl-share-email",{_template:'<template tag-name="crm-rl-share-email"> <template is="if" value="{{expHandlers(isRecordLocked,\'!\')}}"><template case="true"> <span id="getMailOpt" style="display:none;"> <span name="mail" data-zcqa="link_SendMail" class="tb_newsmallbtn" onclick="{{action(\'sendEntMail\',encodeJS(mailObj.module),mailObj.entityId,\'\',encodeJS(mailObj.singularMod))}}">{{getI18n \'crm.emails.compose\'}}</span> </span> </template></template> <span id="zmailRS" class="mR10 dIB vam" style="display: none"> <template is="if" value="{{expHandlers(mailObj.customSharing,\'!=\',undefined)}}"><template case="true"> <template is="if" value="{{expHandlers(mailObj.checked,\'==\',&quot;checked&quot;)}}"><template case="true"> <lyte-checkbox lt-prop-name="{{getI18n(\'crm.label.share.email\')}}" lt-prop-checked="true" lt-prop-value="val" lt-prop-id="status_{{mailObj.loginUserId}}" lt-prop-label="{{getI18n(\'crm.label.share.email\')}}" id="status_{{mailObj.loginUserId}}" name="status_{{mailObj.loginUserId}}" on-changed="{{method(&quot;updateUsersList&quot;)}}"> </lyte-checkbox> </template><template case="false"> <lyte-checkbox lt-prop-name="{{getI18n(\'crm.label.share.email\')}}" lt-prop-checked="false" lt-prop-value="val" lt-prop-id="status_{{mailObj.loginUserId}}" lt-prop-label="{{getI18n(\'crm.label.share.email\')}}" id="status_{{mailObj.loginUserId}}" name="status_{{mailObj.loginUserId}}" on-changed="{{method(&quot;updateUsersList&quot;)}}"> </lyte-checkbox> </template></template> <input type="hidden" id="zmailkey" name="zmailkey" value="{{mailObj.zmailkey}}"> </template></template> </span> <template is="if" value="{{ifAnyMatch(mailObj.module,\'!=\',\'Accounts\',getContactDetailsLength(mailObj),\'>\',0)}}"><template case="true"><template is="if" value="{{ifNotInventoryModule(mailObj.module)}}"><template case="true"> <span id="sendEntityMailLink" name="mail" data-zcqa="link_SendMail" class="dummyForLeftPanel tb_newsmallbtn dIB vam crm-rl-write-action" onclick="{{action(\'sendEntMail\',mailObj.module,mailObj.entityId,\'\',mailObj.singularMod)}}">{{getI18n(\'crm.emails.compose\')}}</span> </template></template></template></template> </template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1,1]},{type:"text",position:[1,1,0]}]}},default:{}},{type:"attr",position:[3,1]},{type:"if",position:[3,1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"if",position:[1],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"componentDynamic",position:[1]}]}},default:{}},{type:"attr",position:[3]}]}},default:{}},{type:"attr",position:[5]},{type:"if",position:[5],cases:{true:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,0]}]}},default:{}}]}},default:{}}],_observedAttributes:["isRecordLocked","mailObj"],data:function(){return{isRecordLocked:Lyte.attr("boolean"),mailObj:Lyte.attr("object")}},actions:{sendEntMail:function(e,t,a,i){EntSendMail(e,t,a,i)}},methods:{updateUsersList:function(){updateUsersList($("#id").val(),Crm.userDetails.USER_ID)}}}),Lyte.Component.registerHelper("ifNotInventoryModule",(function(e){return"Quotes"!=e&&"Invoices"!=e&&"PurchaseOrders"!=e&&"SalesOrders"!=e})),Lyte.Component.registerHelper("getContactDetailsLength",(function(e){return e&&null!=e.contacts_details?e.contacts_details.length:0}));
